Crear preferencia
Server-Side

Las preferencias son conjuntos de información que te permiten configurar un producto o servicio que deseas cobrar, como el precio y la cantidad, así como otras configuraciones relacionadas con el flujo de pago definido.

Para crear una preferencia, utiliza uno de los SDK disponibles a continuación, completando los atributos con la información respectiva.

          
# SDK de Mercado Pago
import mercadopago
# Agrega credenciales
sdk = mercadopago.SDK("PROD_ACCESS_TOKEN")

        
Cuando termines de crear la preferencia, debes configurarla de acuerdo con tu producto o servicio. Para ello, utiliza uno de los códigos disponibles a continuación, completando los atributos con la información que corresponda.

          
# Crea un ítem en la preferencia
preference_data = {
    "items": [
        {
            "title": "Mi producto",
            "quantity": 1,
            "unit_price": 75
        }
    ]
}

preference_response = sdk.preference().create(preference_data)
preference = preference_response["response"]

        
Importante
El valor de unit_price debe ser un número entero.



    
        # Cria um item na preferência
        preference_data = {
          "items": [
            {
                "id": "item-ID-1234",
                "title": "Meu produto",
                "currency_id": "BRL",
                "picture_url": "https://www.mercadopago.com/org-img/MP3/home/logomp3.gif",
                "description": "Descrição do Item",
                "category_id": "art",
                "quantity": 1,
                "unit_price": 75.76
            }
        ],
        "payer": {
            "name": "João",
            "surname": "Silva",
            "email": "user@email.com",
            "phone": {
                "area_code": "11",
                "number": "4444-4444"
            },
            "identification": {
                "type": "CPF",
                "number": "19119119100"
            },
            "address": {
                "street_name": "Street",
                "street_number": 123,
                "zip_code": "06233200"
            }
        },
        "back_urls": {
            "success": "https://www.success.com",
            "failure": "http://www.failure.com",
            "pending": "http://www.pending.com"
        },
        "auto_return": "approved",
        false,
        "notification_url": "https://www.your-site.com/ipn",
        "statement_descriptor": "MEUNEGOCIO",
        "external_reference": "Reference_1234",
        "expires": True,
        "expiration_date_from": "2016-02-01T12:00:00.000-04:00",
        "expiration_date_to": "2016-02-28T12:00:00.000-04:00"
        }

        preference_response = sdk.preference().create(preference_data)
        preference = preference_response["response"]


        <html>
<head>
    <script src="https://sdk.mercadopago.com/js/v2">
    </script>
</head>
<body>
    <div id="wallet_container">
    </div>
    <script>
      const mp = new MercadoPago('YOUR_PUBLIC_KEY', {
        locale: 'es-CL'
      });

      mp.bricks().create("wallet", "wallet_container", {
        initialization: {
            preferenceId: "<PREFERENCE_ID>",
        },
      });
  </script>
</body>
</html>


Añadir checkout
Client-Side

Primero, asegúrate de haber creado la preferencia en tu backend.

Luego, deberás instalar el SDK de frontend de Mercado Pago en tu proyecto para agregar el botón de pago.

La instalación se realiza, básicamente, en dos pasos:

Agregar el SDK de Mercado Pago al proyecto con tus credenciales configuradas
Iniciar el checkout desde la preferencia
Agregar el SDK de Mercado Pago al proyecto
Client-Side

Para incluir el SDK de Mercado Pago.js, agrega el siguiente código al HTML del proyecto o instala la biblioteca para ReactJs.

          
// SDK MercadoPago.js
<script src="https://sdk.mercadopago.com/js/v2"></script>

        
Luego, inicializa la integración configurando tu clave pública usando el siguiente código JavaScript.

          
const mp = new MercadoPago('YOUR_PUBLIC_KEY');
const bricksBuilder = mp.bricks();

        
Para las integraciones de JavaScript/HTML, a través de CDN, deberás crear un contenedor de identificador para definir la ubicación donde se insertará el botón en la pantalla. La creación del contenedor se realiza insertando un elemento en el código HTML de la página en la que se representará el componente.

 <div id="wallet_container"></div>
Atención
El valor que se muestra en la propiedad de ID a continuación es solo un ejemplo y se puede cambiar, pero siempre debe coincidir con el ID indicado en el paso de renderizado.
Iniciar el checkout desde la preferencia
Client-Side

Al finalizar el paso anterior, inicializa tu checkout usando el ID de la preferencia previamente creada con el identificador del elemento donde se debe mostrar el botón, si estás usando la integración Javascript/HTML, o instanciando el componente, en el caso de la biblioteca React, como se muestra en los ejemplos a continuación.

          
mp.bricks().create("wallet", "wallet_container", {
   initialization: {
       preferenceId: "<PREFERENCE_ID>",
   },
customization: {
 texts: {
  valueProp: 'smart_option',
 },
 },
});

        
A continuación, encontrarás el botón de pago que se muestra en tu página.

Esquema de apertura directa
También es posible realizar la integración a través de llamadas de backend directamente a la API de preferencias. En este modelo, obtendrá el enlace de Checkout Pro en el atributo init_point en la respuesta a la solicitud de la API. A partir de ahí, solo utilícelo para redirigir al comprador al pago.

Para definir el modelo de redirección directa, inserte el código a continuación en su proyecto informando el init_point, campo que se devuelve al crear la preferencia generada anteriormente.

<!doctype html>
<html>
 <head>
   <title>Pagar</title>
 </head>
 <body>
   <a href="YOUR_INIT_POINT"> // Indique el init_point devuelto al crear la preferencia
     <button>
       Paga con MercadoPago
     </button>
   </a>
 </body>
</html>

En el ejemplo anterior, se renderizará un botón de pago que será responsable por abrir el Checkout Pro. Si deseas que la experiencia con Checkout Pro se realice en una pestaña externa, consulta la sección Esquema de apertura

Configurar las back_url
Al final del proceso de pago, es posible redirigir al comprador a otro entorno del sitio a través del atributo back_urls que se configura al crear la preferencia. Las back_urls serán las encargadas de guiar el flujo de regreso a tu sitio web cuando se complete el pago. Es posible definir tres URL de retorno diferentes que corresponden a escenarios de pago pendiente, éxito o error.

Para obtener más información, consulta la sección URL de retorno.

Importante
No utilices dominios locales en el valor back_urls, tales como 'localhost/' o '127.0.0.1' con o sin puerto especificado. Recomendamos usar un servidor con dominio nombrado (DNS) o IPs de desarrollo para poder regresar al sitio después del pago. De lo contrario, aparecerá el mensaje de "Algo ha salido mal" al finalizar el proceso de compra.
Recibir estados de pago
Al crear un pago es posible recibir 3 estados diferentes: Pendiente, Rechazado y Aprobado. Para mantenerse al día con las actualizaciones, debes configurar tu sistema para recibir notificaciones de pago y otras actualizaciones de estado. Consulta Notificaciones para obtener más detalles.

